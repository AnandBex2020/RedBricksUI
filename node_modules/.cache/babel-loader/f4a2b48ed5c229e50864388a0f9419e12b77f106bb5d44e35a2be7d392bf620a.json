{"ast":null,"code":"var _jsxFileName = \"D:\\\\LearnReactjs\\\\redbricksui_rj\\\\src\\\\context\\\\ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\n\n// Tailwind theme classes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themeClasses = {\n  light: 'bg-white text-black',\n  dark: 'bg-gray-900 text-white',\n  blue: 'bg-blue-900 text-white',\n  green: 'bg-green-700 text-white'\n};\nconst defaultTheme = 'light';\n\n// 1. Create Context\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// 2. Context Provider\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(() => {\n    const saved = localStorage.getItem('theme');\n    // ✅ fallback if saved theme not in themeClasses\n    return saved && themeClasses[saved] ? saved : defaultTheme;\n  });\n  useEffect(() => {\n    // clear old classes\n    document.body.className = '';\n\n    // ✅ only add if theme is valid\n    const classes = themeClasses[theme] || themeClasses[defaultTheme];\n    document.body.classList.add(...classes.split(' '));\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme,\n      themeClasses\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n// 3. Custom Hook\n_s(ThemeProvider, \"coP8JKDDb4+BJi9EmFj3Mvf4wGE=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","themeClasses","light","dark","blue","green","defaultTheme","ThemeContext","ThemeProvider","children","_s","theme","setTheme","saved","localStorage","getItem","document","body","className","classes","classList","add","split","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["D:/LearnReactjs/redbricksui_rj/src/context/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\n// Tailwind theme classes\r\nconst themeClasses = {\r\n  light: 'bg-white text-black',\r\n  dark: 'bg-gray-900 text-white',\r\n  blue: 'bg-blue-900 text-white',\r\n  green: 'bg-green-700 text-white',\r\n};\r\n\r\nconst defaultTheme = 'light';\r\n\r\n// 1. Create Context\r\nconst ThemeContext = createContext();\r\n\r\n// 2. Context Provider\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(() => {\r\n    const saved = localStorage.getItem('theme');\r\n    // ✅ fallback if saved theme not in themeClasses\r\n    return saved && themeClasses[saved] ? saved : defaultTheme;\r\n  });\r\n\r\n  useEffect(() => {\r\n    // clear old classes\r\n    document.body.className = '';\r\n\r\n    // ✅ only add if theme is valid\r\n    const classes = themeClasses[theme] || themeClasses[defaultTheme];\r\n    document.body.classList.add(...classes.split(' '));\r\n\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, setTheme, themeClasses }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// 3. Custom Hook\r\nexport const useTheme = () => useContext(ThemeContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,qBAAqB;EAC5BC,IAAI,EAAE,wBAAwB;EAC9BC,IAAI,EAAE,wBAAwB;EAC9BC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,YAAY,GAAG,OAAO;;AAE5B;AACA,MAAMC,YAAY,gBAAGZ,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMa,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,MAAM;IACvC,MAAMiB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C;IACA,OAAOF,KAAK,IAAIZ,YAAY,CAACY,KAAK,CAAC,GAAGA,KAAK,GAAGP,YAAY;EAC5D,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACd;IACAmB,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAG,EAAE;;IAE5B;IACA,MAAMC,OAAO,GAAGlB,YAAY,CAACU,KAAK,CAAC,IAAIV,YAAY,CAACK,YAAY,CAAC;IACjEU,QAAQ,CAACC,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,GAAGF,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC;IAElDR,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEX,OAAA,CAACO,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,KAAK;MAAEC,QAAQ;MAAEX;IAAa,CAAE;IAAAQ,QAAA,EAC7DA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAAnB,EAAA,CAzBaF,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AA0B1B,OAAO,MAAMuB,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlC,UAAU,CAACS,YAAY,CAAC;AAAA;AAACyB,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}